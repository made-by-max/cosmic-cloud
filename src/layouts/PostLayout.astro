---
import { getCollection, render } from "astro:content";
import BaseLayout from "./BaseLayout.astro";
import Wrapper from "../components/Wrapper.astro";

import type { CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("writing");
  posts.sort((a, b) => {
    const dateA = new Date(a.data.date);
    const dateB = new Date(b.data.date);
    return dateB.getTime() - dateA.getTime();
  });
  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

interface Props {
  post: CollectionEntry<"writing">;
}

const { post } = Astro.props;
const { Content } = await render(post);
const pageTitle = post.data.title;
---

<BaseLayout pageTitle={pageTitle}>
  <div>
    <div class="post-header">
      <h1 class="post-heading">{post.data.title}</h1>

      <div class="post-metadata">
        <p class="post-date">
          Posted on: {post.data.date.toLocaleDateString()}
        </p>
        <div>
          {
            post.data.tags.map((tag) => (
              <p class="post-tags">
                <a href={`/tags/${tag}`}>#{tag}</a>
              </p>
            ))
          }
        </div>
      </div>

      <!-- <p class="post-description">{post.data.description}</p> -->
    </div>
    <div class="post-container">
      <article>
        <Content />
      </article>

      <aside>
        <h4>Table of Contents</h4>
      </aside>
    </div>
  </div>
</BaseLayout>

<style>
  .post-container {
    display: grid;
    gap: var(--size-fluid-3);
    grid-template-columns: 1fr minmax(250px, 300px);
  }

  article {
    grid-column: 1;
  }
  aside {
    grid-column: 2;

    @media (max-width: 50rem) {
      display: none;
    }
  }
  .post-metadata {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: last baseline;
    gap: var(--size-fluid-3);
  }
</style>
